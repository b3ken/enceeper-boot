#!/bin/sh

#
# SPDX-License-Identifier: GPL-3.0-or-later
#
# Script to connect to a wireless network and configure networking via ipconfig
#
# Copyright (C) 2019 Vassilis Poursalidis (poursal@gmail.com)
#
# This program is free software: you can redistribute it and/or modify it under the terms of the
# GNU General Public License as published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program. If
# not, see <https://www.gnu.org/licenses/>.
#
# Code taken from: http://www.marcfargas.com/posts/enable-wireless-debian-initramfs/

PREREQ=""
prereqs()
{
  echo "$PREREQ"
}

case $1 in
  prereqs)
    prereqs
    exit 0
    ;;
esac

. /scripts/functions
. /scripts/enceeper_util

AUTH_LIMIT=30
alias WPACLI="wpa_cli -p/tmp/wpa_supplicant -i$NET_INTERFACE "

if [ $NET_WIRELESS -eq 1 ]; then
  log_begin_msg "Starting WLAN connection"
  wpa_supplicant -i$NET_INTERFACE -c/etc/wpa_supplicant.conf -P/run/initram-wpa_supplicant.pid -B -f/tmp/wpa_supplicant.log

  # Wait for AUTH_LIMIT seconds, then check the status
  limit=${AUTH_LIMIT}

  echo -n "Waiting for connection (max ${AUTH_LIMIT} seconds)"
  while [ $limit -ge 0 -a `WPACLI status | grep wpa_state` != "wpa_state=COMPLETED" ]; do
    sleep 1
    echo -n "."
    limit=`expr $limit - 1`
  done
  echo ""

  if [ `WPACLI status | grep wpa_state` != "wpa_state=COMPLETED" ]; then
    log_failure_msg "WLAN offline after timeout"
    panic
  else
    log_success_msg "WLAN online"
    configure_networking
    configure_dns
  fi
fi
